<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="refreshbatteryButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABHNCSVQICAgIfAhkiAAAAAFzUkdCAK7O
        HOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA68AAAOvAGVvHJJAAADwElEQVRYR9VX20uUQRT3IQiK
        Suqleogg0yKjHipCU6I3K7eHhFAfMjHsQqVCCZmpiJFSdLEblmLZQwVZYgVFWYLSrqlLtqht3t3LjD74
        B/RwOmd2XHd2xu3rTgd+MHvmd37nfPvNnJkv6r8xt9s9lzFmQ1xD2BETfr//K4HG0kdzNuLKsF+3qamp
        aExSjsKTCLCISYqhWCnzc4ZC6Qh6OlMSK6DYdCln3QBgDj7BrTCxnwZpkaaUj2wyeaNJaBrjXi+8dbrg
        YatD4B2OyWfiToM0LRUR6clfd/VA5uUGWHqoHBZllyhYhr7MKw2CY4olkLZMYzYk0TvXAkfGPZB76yFE
        hyU1gTjEpRiTFsK8JmjF4qS24AZGxmB76U1jskigmMHRMUVLYsK4O/Dvoa2mkNEHeyprjQmswIaxPtQw
        6JbLtAGTTUbb59XNb43CS3LKIO1CPZQ9eAGlCBqTz8Stbm5RNCUmlWaFDupwCsnj9UFcfhUsPHBWEdxy
        +irYXf0Kl/AefTQXyiXE5VUJrXA+wibTiwKohSqER60dsCCrGObty4P5+4uE2OoTldA7OKzwQkFzxAkv
        grQM/GsyvSiA+rhCyKt7DLF7c6E7eSOkpqaLIi41vVE4JlxGTngB+XWNJq5dphcFaKv/cPF5+JS0ASYS
        14A3ca0owtk/oHDC0dnnhmf2bq2AlIrb4HB9BteXoVD+hEwvdgCdaDOTXR3gTdkqkk+DivA3PggV0FD/
        uh0W55RqBRBWHa+E9p6+IJdyyvRhBXQ6gO9KUJJPgyevA/bkO0W8aoPFWWfU5EcrlOQEpQB0zLyC/l5g
        zk7ghzO1AljLS2A9TkUoHD7XR7i4OT5YxMrMAniek27izrwC/KEtQl5Vohdwt0bhGHGvBsY2rRBFxGTk
        wdP1y8F7rsjEVRahtg3ZiyatAL47EZhb7wFB4BxP3Sa4VIQjdgH4tsYILQNf2YZaI2JeD3Bbkl5Exk5g
        3R9ULgF9PGOXyk2IExrMYzyYZhrRbK2Y3a9VBIPCyfHACw4Cu34B2I2LYkw+E5fdv6NqBqC2YjI6IDSi
        3wf8WJZR2Aoollk5jMhmO47Z8BDw7DRjgkjg2XuBDQ2qWgGYj2MynDReSNjoKPCyU8CxGZmShYITSk8C
        GxvVdQKIfEnFv2f2y2h7K/DCo8B3bNQTo48XHhEcYyyCcx75SkZm5VLKPOPA7G24vZ4Ce454j2PzSg+C
        NH/0ZvzbruX05JaThxoG/5sPk1CjFUvbBoX+/qdZqMlm9fc/Tv+sRUV9A7UjSMmjtsgqAAAAAElFTkSu
        QmCC
</value>
  </data>
</root>